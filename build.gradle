import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}

allprojects {
    apply plugin: 'scala'
    apply plugin: 'java-library'
    apply plugin: 'com.github.johnrengelman.shadow'

    group 'fr.warzou'
    version '0.0.1'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    jar.archiveFileName = "${project.name}.jar"
    shadowJar.archiveFileName = jar.archiveFileName
    shadowJar.minimize()

    processResources.from(sourceSets.main.resources.srcDirs) {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        filter(ReplaceTokens, tokens: [VERSION: project.version])
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs += ['--enable-preview']
        targetCompatibility = JavaVersion.VERSION_16
        sourceCompatibility = JavaVersion.VERSION_16
    }
}

test {
    useJUnitPlatform()
}

ext {
    librairies = [:]
}

librairies.scala = 'org.scala-lang:scala-library:2.13.8'
librairies.scalaTest = 'org.scalatest:scalatest_2.11:3.2.11'
librairies.junit = 'junit:junit:4.13.2'
librairies.lz4 = 'org.lz4:lz4-java:1.8.0'
addSpigotVersion(librairies, 'spigot112', '1.12.2')
addSpigotVersion(librairies, 'spigot113', '1.13.2')
addSpigotVersion(librairies, 'spigot114', '1.14.4')
addSpigotVersion(librairies, 'spigot115', '1.15.2')
addSpigotVersion(librairies, 'spigot116', '1.16.5')
addSpigotVersion(librairies, 'spigot117', '1.17.1')
addSpigotVersion(librairies, 'spigot118', '1.18.2')
addSpigotVersion(librairies, 'spigot119', '1.19.2')
librairies.annotations = 'org.jetbrains:annotations:21.0.1'

static void addSpigotVersion(LinkedHashMap map, String name, String version) {
    map.put(name, 'org.spigotmc:spigot:' + version + '-R0.1-SNAPSHOT')
    map.put(name + 'API', 'org.spigotmc:spigot-api:' + version + '-R0.1-SNAPSHOT')
}